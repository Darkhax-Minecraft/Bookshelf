plugins {
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT'
}

apply from: '../gradle/property_helper.gradle'

base {
    archivesName = "${mod_name}-Common-${minecraft_version}"
}

// Enable Mixins
project.ext.mixin_enabled = project.file("src/main/resources/${mod_id}.common.mixins.json").exists()
project.logger.lifecycle("Mixin ${project.ext.mixin_enabled ? 'enabled' : 'disabled'} for project ${project.name}.")

minecraft {
    version(minecraft_version)
}

dependencies {
    compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.5'
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
}

processResources {

    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {

        expand buildProps
    }
}

// -- MAVEN PUBLISHING --
project.publishing {

    publications {

        mavenJava(MavenPublication) {

            artifactId = base.archivesName.get()
            from components.java
        }
    }

    repositories {

        maven {

            // Sets maven credentials if they are provided. This is generally
            // only used for external/remote uploads.
            if (project.hasProperty('mavenUsername') && project.hasProperty('mavenPassword')) {

                credentials {

                    username findProperty('mavenUsername')
                    password findProperty('mavenPassword')
                }
            }

            url getDefaultString('mavenURL', 'undefined', true)
        }
    }
}